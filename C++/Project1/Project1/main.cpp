#include <iostream>

// 과제 요령
// - 자유
// --> 노트 필기 OK, 영상 OK, 스샷 OK,
// --> 구글링 OK, 친구 OK, 단지 강사만 X

// 과제 1
// - 컴파일 과정
// -- 전처리기 :
// --- 전처리기를 통해 소스코드 파일을 전처리된 코드파일로 변환하는 과정이다.
// --- 전처리 과정은 대표적으로 세가지로 나뉜다.
// ---- 주석 제거 : 소스코드에서 주석을 전부 제거한다. 주석은 컴퓨터에겐 필요없는 내용이기 때문.
// ---- 헤더파일 삽입 : #include 지시문의 헤더파일을 찾아 그 안의 모든 내용을 복사하여 소스코드에 삽입한다.
//					   헤더파일의 모든 내용이 소스코드 파일내에 복사된다. 헤더파일에 선언된 함수 원형은 링크를 통해 
// -- 컴파일
// -- 어셈블리
// -- 링크

// 과제 2
// - 자기소개 출력하기

// library : 도서관
// sln : solution
// - 책장
// 
// project :
// - 구역

// bit : 0,1을 나타낼 수 있는 최소 단위

// x86: 32비트 운영체제 ... 2^32
// x64: 64비트 운영체제 ... 2^64

// CPU, 메모리, HDD(SSD)
// CPU
// - 제어장치
// - 산술/연산 장치
// - 캐시 : 매모리 주소를 잠깐 저장해놓는 곳
// - 레지스터: 
// -- 32비트 운영체제에서는 32비트 만큼 등록하고 처리
// -- 64비트 운영체제에서는 64비트만큼 등록하고 처리

// RAM : Random Access Memory
// - 저장용량 : 16GB, 32GB
// - 휘발성 메모리
// - CPU와의 거리 : 상대적으로 가깝다.
// - 접근하는 속도가 상대적으로 빠르다.
// => 폰노이만의 병목현상 : 아무리 계산을 빨리해도 메모리에 접근하고 데이터를 가져오는 속도는 더 빨라질 수 없다.

// HDD
// - 저장용량 : 1TB
// - 반영구적 메모리
// - CPU와의 거리 : 상대적으로 멀다.
// - 접근하는 속도가 상대적으로 느리다.

int main()
{
	// std:: -> standard library
	// cout : standard library.cout
	// endl : end line
	// ; : 한 줄이 끝났다.
	std::cout << "HelloWorld" << std::endl;
	std::cout << "안녕하세요" << std::endl;
	std::cout << "제 이름은 양재형 입니다." << std::endl;
	std::cout << "저는 24살이고, 게임을 좋아합니다." << std::endl;
	std::cout << "현재 딱히 하고 있는 일은 없지만," << std::endl;
	std::cout << "최대한 많은 것을 배우고 익혀서 취업까지 목표로 하겠습니다!" << std::endl;

	return 0;
}